#!/usr/local/bin/python3.7

##start with import's

import sys
import os
import stat
from multiprocessing import Process
from subprocess import PIPE,Popen
from datetime import datetime, timedelta

import requests

import tarfile

##Lets make a list of all of the global variable list

CV_LOG_DIR="/var/log/clamscan/"

CLAMSCAN_SIGN="/usr/share/clamav/"
NEW_CLAMSCAN_SIGN="/usr/local/cpanel/3rdparty/share/clamav/"

CV_LOGFILE=CV_LOG_DIR+'clamav_full_scan.log'


LOCK_FILE=CV_LOG_DIR+'clamav_full_scan_quarantine.lock'

WARNED_USERS_DIR="/opt/warned_users/"

#CV_LOG_DIR="/home/clen.mo/test/testclen/"
#WARNED_USERS_DIR="/home/clen.mo/test/file1"


##Lets test for the presence for the existance of /var/log/clamscan

print("Running preliminary tests to check for presence of files/directories for a smooth finish")

def file_init(file):
	try:
		if file[-1] == '/':
			flag_dir=stat.S_ISDIR(os.lstat(file)[stat.ST_MODE])
			print(f"[+] Directory found  ::  {file}")
		
		elif file[-1] != '/':
			flag_file=stat.S_ISREG(os.lstat(file)[stat.ST_MODE])
			print(f"[+] Conf File found  ::  {file}")
		else:
			print("Not a valid file/directory")
	except FileNotFoundError:
		print("[!!] Not found, Setting it up")
		print("[*] This may take some time, keep calm.")
		if file[-1] == '/':
			os.mkdir(file)
		elif file[-1] != '/':
			os.mknod(file)
			if file[-4] == 'lock':
				with open(file) as it:
					format=datetime.now().strftime("%Y-%m-%d %H:%M:%S")
					it.write(format + " FULL WEEK SCAN")
			else:
				print("Section not yet planned")

		print(f"[+]Set up :: {file}")
		
	except	NotADirectoryError:
		print("[!!] Not found, Setting it up")
		print("[*] This may take some time, keep calm.")
		os.mkdir(file)
			
		print(f"[+]Set up :: {file}")
 		

#Some testing her before we proceed.
#file_init(CV_LOG_DIR)
#file_init(WARNED_USERS_DIR)
#file_init(LOCK_FILE)


##we have completed setting basic structure.

##Lets start with fresh_clam update

def fresh_clam():
	#p1=Popen(["/usr/bin/freshclam", "-l", CV_LOGFILE, "--verbose"])
	p1=Popen(["/usr/bin/freshclam", "--verbose"])
	out,error=p1.communicate()

##fresh clam update here.


today_date=datetime.now().strftime("%Y-%m-%d")
yesterday_date=(datetime.now() - timedelta(1)).strftime('%Y-%m-%d')
portion3=".tar.gz"
user="EIGCLAM"
password='?x/;(F5,;Sc^&vaJ'

def sitelock_wget():
	print(f"child pid : {os.getpid()}")
	print("================================================")
	print("downloading sitelock")
	print("================================================")
	portion1="https://sync-box.webhostbox.net/sitelock_sign_"
	portion4="/tmp/clamav/sitelock_sign_"
	src_link1=portion1+today_date+portion3
	dest_link1=portion4+today_date+portion3
	src_link2=portion1+yesterday_date+portion3
	dest_link2=portion4+yesterday_date+portion3
	r=requests.get(src_link1, verify=False, auth=(user, password))
	if r.status_code == "200":
		p1=Popen(["/usr/bin/wget", "--user", user, "--password", password, "--no-check-certificate", "--tries=3", src_link1, "-O", dest_link1])
		out,error=p1.communicate()
	else:
		p2=Popen(["/usr/bin/wget", "--user", user, "--password", password, "--no-check-certificate", "--tries=3", src_link2, "-O", dest_link2])
		out,error=p2.communicate()



def hostgator_wget():
	print(f"child pid : {os.getpid()}")
	print("================================================")
	print("downloading hostgator")
	print("================================================")
	portion1="https://sync-box.webhostbox.net/hostgator_sign_"
	portion4="/tmp/clamav/hostgator_sign_"
	src_link1=portion1+today_date+portion3
	dest_link1=portion4+today_date+portion3
	src_link2=portion1+yesterday_date+portion3
	dest_link2=portion4+yesterday_date+portion3
	r=requests.get(src_link1, verify=False, auth=(user, password))
	if r.status_code == "200":
		p1=Popen(["/usr/bin/wget", "--user", user, "--password", password, "--no-check-certificate", "--tries=3", src_link1, "-O", dest_link1])
		out,error=p1.communicate()
	else:
		p2=Popen(["/usr/bin/wget", "--user", user, "--password", password, "--no-check-certificate", "--tries=3", src_link2, "-O", dest_link2])
		out,error=p2.communicate()


def vdeck_wget():
	print(f"child pid : {os.getpid()}")
	print("================================================")
	print("downnloading vdeck")
	print("================================================")
	portion1="https://sync-box.webhostbox.net/vdeck_sign_"
	portion4="/tmp/clamav/vdeck_sign_"
	src_link1=portion1+today_date+portion3
	dest_link1=portion4+today_date+portion3
	src_link2=portion1+yesterday_date+portion3
	dest_link2=portion4+yesterday_date+portion3
	r=requests.get(src_link1, verify=False, auth=(user, password))
	if r.status_code == "200":
		p1=Popen(["/usr/bin/wget", "--user", user, "--password", password, "--no-check-certificate", "--tries=3", src_link1, "-O", dest_link1])
		out,error=p1.communicate()
	else:
		p2=Popen(["/usr/bin/wget", "--user", user, "--password", password, "--no-check-certificate", "--tries=3", src_link2, "-O", dest_link2])
		out,error=p2.communicate()

def lmd_wget():
	print(f"child pid : {os.getpid()}")
	print("================================================")
	print("Downloading Linux-Malware-Detect signatures...")
	print("================================================")
	src_link1="http://cdn.rfxn.com/downloads/rfxn.hdb"
	src_link2="http://cdn.rfxn.com/downloads/rfxn.ndb"
	dest_link1="/tmp/clamav/lmd.hdb_new"
	dest_link2="/tmp/clamav/lmd.ndb_new"
	p1=Popen(["/usr/bin/wget", "--tries=3", src_link1, "-O", dest_link1])
	out1,error1=p1.communicate()

	p2=Popen(["/usr/bin/wget", "--tries=3", src_link2, "-O", dest_link2])
	out2,error=p2.communicate()


def extract_all():
    os.chdir('/tmp/clamav')
    print(f"child pid : {os.getpid()}")
    for i in os.listdir('/tmp/clamav'):
        print(f"working on {i}")
        t=tarfile.open(i, 'r:gz')
        for j in t:
            print(f"extracting {j}")
            task=t.extract(j, path=NEW_CLAMSCAN_SIGN)
        t.close()
    os.chdir(NEW_CLAMSCAN_SIGN)
    for i in os.listdir(NEW_CLAMSCAN_SIGN):
        os.chown(i, 984, 0)


#Testing the fucntionality#
###########################
#sitelock_wget()	  #
#hostgator_wget()         #
#vdeck_wget()             #
#lmd_wget()		  #
#Testing more functionhere#
###########################


###################################
#Signature downloads complete here#
###################################




if __name__=="__main__":
	file_init(CV_LOG_DIR)
	file_init(WARNED_USERS_DIR)
	file_init(LOCK_FILE)
	file_init(CV_LOGFILE)
	fresh_clam()
	p1=Process(target=sitelock_wget)
	p2=Process(target=hostgator_wget)
	p3=Process(target=vdeck_wget)
	p4=Process(target=lmd_wget)
	p1.start()
	p2.start()
	p3.start()
	p1.join()
	p2.join()
	p3.join()
	extract_all()

	print("done")
